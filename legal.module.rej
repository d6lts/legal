--- legal.module
+++ legal.module
@@ -96,10 +96,10 @@ function legal_menu() {
     'file'             => 'legal.pages.inc',
   );
 
-  $items['legal_accept/%/%'] = array(
+  $items['legal_accept'] = array(
     'title'           => 'Terms and Conditions',
     'page callback'   => 'drupal_get_form',
-    'page arguments'  => array('legal_login', 1, 2),
+    'page arguments'  => array('legal_login'),
     'access callback' => TRUE,
     'type'            => MENU_CALLBACK,
   );
@@ -477,8 +477,18 @@ function legal_user_login(&$edit, $account) {
     ->execute()
     ->fetchAllAssoc('uid');
   $signatory = array_pop($result);
+  $token = drupal_hash_base64(drupal_random_bytes(55));
+  $hash = user_pass_rehash($signatory->pass, $token, $signatory->login, $uid);
 
-  drupal_goto('legal_accept/' . $signatory->uid . '/' . md5($signatory->name . $signatory->pass . $signatory->login), array('query' => $query));
+  user_cookie_save(array('legal_hash' => $hash, 'legal_id' => $uid));
+
+  $query['token'] = $token;
+
+  drupal_goto('legal_accept',
+    array(
+      'query' => $query,
+    )
+  );
 }
 
 /**
@@ -559,9 +569,43 @@ function legal_user_update(&$edit, $account, $category) {
 /**
  * Require registered users to accept new T&C.
  */
-function legal_login($form, $constructor, $uid, $id_hash = NULL) {
+function legal_login($form, $constructor) {
   global $language;
 
+  // Check we have all the data and there are no shenanigans.
+  if (!isset($_GET['token']) || !isset($_COOKIE['Drupal_visitor_legal_id']) || !is_numeric($_COOKIE['Drupal_visitor_legal_id']) || !isset($_COOKIE['Drupal_visitor_legal_hash'])) {
+    user_cookie_delete('legal_hash');
+    user_cookie_delete('legal_id');
+    drupal_set_message(t('Operation timed out. Please try to log in again.'));
+    drupal_goto();
+  }
+
+  $id_hash = $_COOKIE['Drupal_visitor_legal_hash'];
+  $uid = $_COOKIE['Drupal_visitor_legal_id'];
+  $token = $_GET['token'];
+
+  $result = db_select('users', 'u')
+    ->fields('u')
+    ->condition('uid', $uid)
+    ->range(0, 1)
+    ->execute()
+    ->fetchAllAssoc('uid');
+
+  $account = array_pop($result);
+
+  // Make sure the account is real and has a last login value.
+  if (!isset($account->login)) {
+    drupal_goto();
+  }
+
+  // Limit how long $id_hash can be used to 1 hour.
+  // Timestamp and $id_hash are used to generate the authentication token.
+  if ((REQUEST_TIME - $account->login) > 3600) {
+    user_cookie_delete('legal_hash');
+    user_cookie_delete('legal_id');
+    drupal_goto();
+  }
+
   $accept_every_login = variable_get('accept_every_login', '0');
 
   // get last accepted version for this account
@@ -601,7 +645,12 @@ function legal_login($form, $constructor, $uid, $id_hash = NULL) {
     '#value' => $uid,
   );
 
-  $form['id_hash'] = array(
+  $form['token'] = array(
+    '#type'  => 'value',
+    '#value' => $token,
+  );
+
+  $form['hash'] = array(
     '#type'  => 'value',
     '#value' => $id_hash,
   );
@@ -645,16 +694,28 @@ function legal_login_validate($form, &$form_state) {
     ->fetchAllAssoc('uid');
 
   $account = array_pop($result);
-  $id_hash = md5($account->name . $account->pass . $account->login);
 
-  if ($id_hash != $form_state['values']['id_hash']) {
+  $hash = user_pass_rehash(
+    $account->pass,
+    $form_state['values']['token'],
+    $account->login,
+    $form_state['values']['uid']
+  );
+
+  if ($hash !== $form_state['values']['hash']) {
     form_set_error('legal_accept', t('User ID cannot be identified.'));
+    user_cookie_delete('legal_hash');
+    user_cookie_delete('legal_id');
     drupal_goto();
   }
 }
 
 function legal_login_submit($form, &$form_state) {
   global $user;
+
+  user_cookie_delete('legal_hash');
+  user_cookie_delete('legal_id');
+
   $values = $form_state['values'];
   $user   = user_load($values['uid']);
 
